// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "users",
    columns: [
      { name: "username", type: "string", unique: true },
      { name: "user-mail", type: "email" },
      {
        name: "subscription",
        type: "link",
        link: { table: "Subscriptions" },
        unique: true,
      },
      { name: "accounts", type: "json" },
      { name: "read", type: "json", notNull: true, defaultValue: "[]" },
      { name: "new", type: "json", notNull: true, defaultValue: "[]" },
      { name: "contacts", type: "json", notNull: true, defaultValue: "[]" },
    ],
  },
  {
    name: "clients",
    columns: [
      { name: "campaigns", type: "json", notNull: true, defaultValue: "[]" },
      { name: "budgets", type: "json", notNull: true, defaultValue: "[]" },
      { name: "start", type: "datetime" },
      { name: "end", type: "datetime" },
      { name: "total-spent", type: "int" },
      { name: "total-budgets", type: "int" },
      { name: "trend", type: "string" },
      { name: "percent", type: "int" },
    ],
    revLinks: [{ column: "client", table: "Budgets" }],
  },
  {
    name: "Subscriptions",
    columns: [
      { name: "name", type: "string" },
      { name: "clients", type: "int" },
      { name: "monthly", type: "int" },
      { name: "price", type: "int" },
      { name: "budgets", type: "int" },
    ],
    revLinks: [{ column: "subscription", table: "users" }],
  },
  {
    name: "Contacts",
    columns: [
      { name: "name", type: "string" },
      { name: "mail", type: "email" },
    ],
  },
  {
    name: "Budgets",
    columns: [
      { name: "client", type: "link", link: { table: "clients" } },
      { name: "campaigns", type: "json", notNull: true, defaultValue: "[]" },
      { name: "auomation", type: "json", notNull: true, defaultValue: "[]" },
    ],
  },
  {
    name: "Accounts",
    columns: [
      { name: "type", type: "string", unique: true },
      { name: "token", type: "string" },
      { name: "campaigns", type: "json", notNull: true, defaultValue: "[]" },
    ],
  },
  {
    name: "alert",
    columns: [
      { name: "type", type: "string" },
      { name: "heading", type: "string" },
      { name: "body", type: "json" },
      { name: "quick-action", type: "string" },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Mohammed-Nasim-s-workspace-g7p9di.us-east-1.xata.sh/db/budee",
    enableBrowser: true,
    apiKey: process.env.NEXT_PUBLIC_XATA_API_KEY,
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
